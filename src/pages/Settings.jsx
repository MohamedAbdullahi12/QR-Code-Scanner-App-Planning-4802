import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import { motion } from 'framer-motion';
import * as FiIcons from 'react-icons/fi';
import SafeIcon from '../common/SafeIcon';
import { useTheme } from '../contexts/ThemeContext';

const { FiArrowLeft, FiMoon, FiSun, FiInfo, FiHeart, FiGithub, FiMail } = FiIcons;

const Settings = () => {
  const { isDark, toggleTheme } = useTheme();
  const [showWatermark, setShowWatermark] = useState(() => {
    const saved = localStorage.getItem('quickqr-watermark');
    return saved ? JSON.parse(saved) : true;
  });

  const handleWatermarkToggle = () => {
    const newValue = !showWatermark;
    setShowWatermark(newValue);
    localStorage.setItem('quickqr-watermark', JSON.stringify(newValue));
  };

  const settingsItems = [
    {
      id: 'theme',
      label: 'Dark Mode',
      description: 'Switch between light and dark themes',
      icon: isDark ? FiSun : FiMoon,
      type: 'toggle',
      value: isDark,
      onChange: toggleTheme
    },
    {
      id: 'watermark',
      label: 'Show Watermark',
      description: 'Add "Generated by QuickQR" to QR codes',
      icon: FiInfo,
      type: 'toggle',
      value: showWatermark,
      onChange: handleWatermarkToggle
    }
  ];

  const aboutItems = [
    {
      id: 'version',
      label: 'Version',
      value: '1.0.0',
      icon: FiInfo
    },
    {
      id: 'developer',
      label: 'Developer',
      value: 'QuickQR Team',
      icon: FiHeart
    }
  ];

  return (
    <div className="min-h-screen bg-gray-50 dark:bg-dark-900">
      <div className="container mx-auto px-4 py-8">
        <div className="max-w-md mx-auto">
          {/* Header */}
          <div className="flex items-center justify-between mb-8">
            <Link to="/">
              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className="p-2 rounded-full bg-white dark:bg-dark-800 shadow-lg hover:shadow-xl transition-all duration-300"
              >
                <SafeIcon icon={FiArrowLeft} className="w-6 h-6 text-gray-600 dark:text-gray-300" />
              </motion.button>
            </Link>
            <h1 className="text-xl font-semibold text-gray-900 dark:text-white">
              Settings
            </h1>
            <div className="w-10" />
          </div>

          {/* Settings Sections */}
          <div className="space-y-6">
            {/* Preferences */}
            <div className="bg-white dark:bg-dark-800 rounded-2xl shadow-lg p-6">
              <h2 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                Preferences
              </h2>
              <div className="space-y-4">
                {settingsItems.map((item) => (
                  <motion.div
                    key={item.id}
                    whileHover={{ scale: 1.01 }}
                    className="flex items-center justify-between p-3 rounded-xl hover:bg-gray-50 dark:hover:bg-dark-700 transition-colors"
                  >
                    <div className="flex items-center gap-3">
                      <div className="bg-primary-100 dark:bg-primary-900 p-2 rounded-full">
                        <SafeIcon icon={item.icon} className="w-5 h-5 text-primary-600 dark:text-primary-400" />
                      </div>
                      <div>
                        <h3 className="font-medium text-gray-900 dark:text-white">
                          {item.label}
                        </h3>
                        <p className="text-sm text-gray-600 dark:text-gray-300">
                          {item.description}
                        </p>
                      </div>
                    </div>
                    {item.type === 'toggle' && (
                      <motion.button
                        whileHover={{ scale: 1.05 }}
                        whileTap={{ scale: 0.95 }}
                        onClick={item.onChange}
                        className={`relative w-12 h-6 rounded-full transition-colors duration-300 ${
                          item.value ? 'bg-primary-600' : 'bg-gray-300 dark:bg-dark-600'
                        }`}
                      >
                        <motion.div
                          animate={{ x: item.value ? 24 : 0 }}
                          transition={{ type: 'spring', stiffness: 500, damping: 30 }}
                          className="absolute top-0.5 left-0.5 w-5 h-5 bg-white rounded-full shadow-md"
                        />
                      </motion.button>
                    )}
                  </motion.div>
                ))}
              </div>
            </div>

            {/* About */}
            <div className="bg-white dark:bg-dark-800 rounded-2xl shadow-lg p-6">
              <h2 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                About
              </h2>
              <div className="space-y-4">
                {aboutItems.map((item) => (
                  <div key={item.id} className="flex items-center justify-between p-3 rounded-xl">
                    <div className="flex items-center gap-3">
                      <div className="bg-gray-100 dark:bg-dark-700 p-2 rounded-full">
                        <SafeIcon icon={item.icon} className="w-5 h-5 text-gray-600 dark:text-gray-300" />
                      </div>
                      <h3 className="font-medium text-gray-900 dark:text-white">
                        {item.label}
                      </h3>
                    </div>
                    <span className="text-sm text-gray-600 dark:text-gray-300">
                      {item.value}
                    </span>
                  </div>
                ))}
              </div>
            </div>

            {/* App Info */}
            <div className="bg-white dark:bg-dark-800 rounded-2xl shadow-lg p-6">
              <h2 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                QuickQR
              </h2>
              <div className="text-center">
                <div className="bg-primary-100 dark:bg-primary-900 p-6 rounded-full inline-block mb-4">
                  <SafeIcon icon={FiInfo} className="w-8 h-8 text-primary-600 dark:text-primary-400" />
                </div>
                <h3 className="text-xl font-bold text-gray-900 dark:text-white mb-2">
                  QuickQR
                </h3>
                <p className="text-gray-600 dark:text-gray-300 mb-4">
                  Fast & Simple QR Code Scanner and Generator
                </p>
                <p className="text-sm text-gray-500 dark:text-gray-400 leading-relaxed">
                  A lightweight utility app for all your QR code needs. Scan, generate, save, and share QR codes with ease.
                </p>
              </div>
            </div>

            {/* Footer */}
            <div className="text-center py-6">
              <p className="text-sm text-gray-500 dark:text-gray-400">
                Made with <SafeIcon icon={FiHeart} className="w-4 h-4 inline text-red-500" /> by QuickQR Team
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Settings;